##############################
设计与架构目标
##############################

CodeIgniter 的目标是在最小化，最轻量级的开发包中得到最大的执行效率、功能和灵活性。

为了达到这个目标，我们在开发过程的每一步都致力于基准测试、重构和简化工作，拒绝加入任何对实现目标没有帮助的东西。

从技术和架构角度看，CodeIgniter 按照下列目标创建：

-  **动态实例化。** 在 CodeIgniter 中，组件的导入和函数的执行都是在被请求的时候才执行，而不是全局的。除核心资源外，系统不需要任何其他资源，因此系统默认是非常轻量级的。HTTP 请求所触发的事件以及你设计的控制器和视图将决定哪些资源是需要加载的。
-  **低耦合。** 耦合是指一个系统中组件之间的依赖程度。组件之间的依赖程度越低，系统的重用性和灵活性就越好。我们的目标就是打造一个低耦合的系统。
-  **组件专一性。** 专一性指的是组件对某个目标的专注程度。在 CodeIgniter 中，每一个类和方法都是高度独立的，从而可以最大程度地被复用。

CodeIgniter 是一个动态实例化，高度组件专一性的低耦合系统。它在小巧的基础上力求做到简单、灵活和高性能。
